@using ZP50.Web.Areas.Oratorio.Models
@using ZP50.Web.Common.Helpers
@model ZP50.Core.Oratorio.Partecipante

@{
    ViewBag.Title = "Edit";
}
<h2>Partecipante</h2>
<ul class="nav nav-pills">
    <li class="nav-item ">
        <a class="nav-link active" href="#">Anagrafica</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="#">Recapiti</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="#">Quote</a>
    </li>
</ul>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-8">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Nome)
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Cognome)
                        @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cognome, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.DataNascita)

                        @Html.EditorFor(model => model.DataNascita, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DataNascita, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.CodiceIdentificativo)
                        <div class="input-group mb-1">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="fa fa-fw fa-qrcode"></i>
                                </span>
                            </div>
                            @Html.EditorFor(model => model.CodiceIdentificativo, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                            <div class="input-group-append">
                                <span class="input-group-text">
                                    @Html.ActionLink("Associa", "AssociaCodice", new { id = Model.ID })
                                </span>
                            </div>
                        </div>



                        @Html.ValidationMessageFor(model => model.CodiceIdentificativo, "", new { @class = "text-danger" })


                    </div>
                </div>

                <div class="card  bg-light">
                    <div class="card-body">
                        @Html.EditorFor(model => model.Indirizzo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Indirizzo, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Annotazioni, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Annotazioni, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Annotazioni, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Salva" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Quote</h5>
                    <div id="quote" class="list-group">
                        @foreach (var quota in Model.QuoteAcquistate)
                {
                    Html.RenderPartial("_QuotaAcquistata", quota);
                }
                    </div>

                </div>
                <div class="card-footer">
                    <div class="form-inline">
                        @Html.DropDownList("QuotaDaAggiungere", DbSelectItems.QuotePartecipazione(), new { @class = "form-control" })
                        <button type="button" class="btn btn-light ml-1" id="aggiungiQuota">Aggiungi</button>
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Recapiti</h5>
                    <div id="recapiti" class="list-group">
                        @foreach (var recapito in Model.Recapiti)
                {
                    Html.RenderPartial("_Recapito", recapito);
                }
                    </div>

                </div>
                <div class="card-footer">
                    <div class="form-inline">
                        <button type="button" class="btn btn-light ml-1" id="aggiungiRecapito">Aggiungi</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
        $('#aggiungiQuota').on('click', function () {
            var quotaId = $("#QuotaDaAggiungere").val();
                $.ajax({
                    async: false,
                    url: '@Url.Action("AggiungiQuota")',
                    data: {id: quotaId, partecipanteId: @Model.ID}

                }).done(function (partialView) {
                    $('#quote').append(partialView);
                });
            });
                $('#aggiungiRecapito').on('click', function () {
                $.ajax({
                    async: false,
                    url: '@Url.Action("AggiungiRecapito")',
                    data: {partecipanteId: @Model.ID}

                }).done(function (partialView) {
                    $('#recapiti').append(partialView);
                });
            });
            $("#deleteRow").on("click", function () {
                $(this).parents("#employeeRow:first").remove();
                return false;
            });
</script>

}
